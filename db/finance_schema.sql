-- Finance/GCash Payment Schema

-- Table to store payment transactions
CREATE TABLE payments (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Unique identifier for the payment record',
    payment_request_id VARCHAR(255) NOT NULL UNIQUE COMMENT 'Unique ID generated by our system for the payment attempt',
    transaction_id VARCHAR(255) NULL UNIQUE COMMENT 'Transaction ID from GCash (can be null initially)',
    student_id VARCHAR(50) NOT NULL COMMENT 'Student ID (e.g., UA202301963) linked to the payment',
    email VARCHAR(255) NULL COMMENT 'Student email provided during payment',
    phone_number VARCHAR(20) NULL COMMENT 'Phone number provided during payment',
    section VARCHAR(50) NULL COMMENT 'Student section provided during payment',
    amount DECIMAL(10, 2) NOT NULL COMMENT 'Total amount paid',
    currency VARCHAR(3) NOT NULL DEFAULT 'PHP' COMMENT 'Currency code (e.g., PHP)',
    status ENUM('PENDING', 'SUCCESS', 'FAILED', 'CANCELLED') NOT NULL DEFAULT 'PENDING' COMMENT 'Payment status',
    payment_method VARCHAR(50) NOT NULL DEFAULT 'GCASH' COMMENT 'Method used for payment',
    description VARCHAR(255) NULL COMMENT 'Optional description of the payment',
    metadata JSON NULL COMMENT 'Additional metadata stored as JSON',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Timestamp when the payment record was created',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Timestamp when the payment record was last updated',

    INDEX idx_payment_request_id (payment_request_id),
    INDEX idx_transaction_id (transaction_id),
    INDEX idx_student_id (student_id),
    INDEX idx_status (status),
    INDEX idx_created_at (created_at)
    -- Note: No foreign key to students table defined here, assuming student_id is used directly.
    -- If a separate 'students' table exists, add:
    -- FOREIGN KEY (student_id_ref) REFERENCES students(id) ON DELETE SET NULL ON UPDATE CASCADE
) COMMENT='Stores details about each payment transaction initiated or completed.';

-- Table to store the breakdown of memberships included in a payment
CREATE TABLE payment_memberships (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Unique identifier for the membership item link',
    payment_id INT NOT NULL COMMENT 'Foreign key linking to the payments table',
    membership_type ENUM('CES', 'ICSO', 'SUB_ORG') NOT NULL COMMENT 'Type of membership purchased',
    sub_org_slug VARCHAR(100) NULL COMMENT 'Slug of the sub-organization if membership_type is SUB_ORG',
    cost DECIMAL(8, 2) NOT NULL COMMENT 'Cost of this specific membership item at the time of purchase',

    FOREIGN KEY (payment_id) REFERENCES payments(id) ON DELETE CASCADE ON UPDATE CASCADE,
    INDEX idx_payment_id (payment_id),
    INDEX idx_membership_type (membership_type)
) COMMENT='Links payments to the specific memberships that were purchased in that transaction.';

-- Optional: Table for refunds if needed later
-- CREATE TABLE refunds (
--     id INT AUTO_INCREMENT PRIMARY KEY,
--     refund_request_id VARCHAR(255) NOT NULL UNIQUE,
--     payment_id INT NOT NULL,
--     gcash_refund_id VARCHAR(255) NULL UNIQUE,
--     amount DECIMAL(10, 2) NOT NULL,
--     currency VARCHAR(3) NOT NULL DEFAULT 'PHP',
--     reason VARCHAR(255) NULL,
--     status ENUM('PENDING', 'SUCCESS', 'FAILED') NOT NULL DEFAULT 'PENDING',
--     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
--     FOREIGN KEY (payment_id) REFERENCES payments(id) ON DELETE RESTRICT ON UPDATE CASCADE
-- ) COMMENT='Stores details about refund transactions.';

-- Note: Ensure character sets and collations are appropriate (e.g., utf8mb4)
-- ALTER TABLE payments CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
-- ALTER TABLE payment_memberships CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
